substitutions:
  name: xgimi-ble-advertiser
  friendly_name: XGIMI BLE Advertiser
  board: esp32dev

esphome:
  name: ${name}
  friendly_name: ${friendly_name}
  includes:
    - xgimi_ble_advertiser.h

esp32:
  board: ${board}
  framework:
    type: esp-idf

logger:

api:

ota:

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

text_sensor:
  - platform: template
    name: "XGIMI BLE Token"
    id: ble_token
    # This token is used for BLE advertisement. Add your value to secrets.yaml like:
    # xgimi_token: 5EEBCF58395438FFFFFFFF3043524B544D
    lambda: |-
      return {App.get_app_component<esphome::Application>()->get_secret("xgimi_token")};

number:
  - platform: template
    name: "BLE Broadcast Duration"
    id: broadcast_duration
    optimistic: true
    min_value: 1
    max_value: 30
    step: 1
    unit_of_measurement: "s"
    initial_value: 5

  - platform: template
    name: "BLE Rebroadcast Interval"
    id: broadcast_interval
    optimistic: true
    min_value: 1
    max_value: 10
    step: 1
    unit_of_measurement: "s"
    initial_value: 1

button:
  - platform: template
    name: "XGIMI BLE Advertiser"
    id: xgimi_ble_button
    on_press:
      - logger.log: "Triggering BLE advertisement for XGIMI projector"
      - lambda: |-
          id(xgimi_ble).start_broadcast();

custom_component:
  - lambda: |-
      auto xgimi = new XgimiBleAdvertiser();
      App.register_component(xgimi);
      return {xgimi};
    components:
      - id: xgimi_ble
